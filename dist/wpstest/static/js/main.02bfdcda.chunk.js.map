{"version":3,"sources":["js/util.js","js/systemdemo.js","components/ribbon.js","components/app.js","components/dialog.js","actions/dialog.js","components/taskpane.js","actions/taskpane.js","reducers/dialog.js","reducers/taskpane.js","reducers/index.js","index.js"],"names":["WPS_Enum","msoCTPDockPositionLeft","msoCTPDockPositionRight","GetUrlPath","e","document","location","toString","decodeURI","indexOf","substring","lastIndexOf","param","jsonObj","JSON","parse","alert","stringify","wps加载项项返回","filepath","Index","docName","wps","WpsApplication","ActiveDocument","Name","当前打开的文件名为","操作结果","Documents","Add","filePath","OpenFromUrl","其它xxx","WebNotifycount","ribbon","OnAddinLoad","ribbonUI","Enum","Util","window","openOfficeFileFromSystemDemo","SystemDemo","InvokeFromSystemDemo","PluginStorage","setItem","OnAction","control","Id","doc","bFlag","getItem","InvalidateControl","ShowDialog","devicePixelRatio","tsId","tskpane","GetTaskPane","Visible","CreateTaskPane","id","ID","bRegister","ApiEvent","AddApiEventListener","RemoveApiEventListener","currentTime","Date","timeStr","getHours","getMinutes","getSeconds","OAAssist","WebNotify","GetImage","OnGetEnabled","OnGetVisible","eleId","console","log","OnGetLabel","OnNewDocumentApiEvent","App","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","_createClass","key","value","React","createElement","Component","Dialog","onDocNameClick","getDocName","onCreateTaskpane","createTaskpane","onCreateDoc","newDoc","onAddString","addString","onCloseDoc","closeDoc","onOpenWeb","openWeb","_this2","axios","get","then","res","setDemoSpan","data","_this$props","this","demoSpan","className","onClick","connect","dialog","type","Taskpane","_len","arguments","length","args","Array","_key","apply","concat","onDockLeft","dockLeft","onDockRight","dockRight","onHideTaskPane","hideTaskPane","onGetDocName","defaultState","Immutable","rootReducer","combineReducers","undefined","action","newState","set","Range","Text","rgSel","Selection","Select","Count","Close","ShellExecute","taskpane","DockPosition","store","createStore","STATE_FROM_SERVER","ReactDOM","render","Provider","HashRouter","Switch","Route","path","exact","component","TaskPane","getElementById"],"mappings":"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","file":"static/js/main.02bfdcda.chunk.js","sourcesContent":["//在后续的wps版本中，wps的所有枚举值都会通过wps.Enum对象来自动支持，现阶段先人工定义\r\nvar WPS_Enum = {\r\n    msoCTPDockPositionLeft: 0,\r\n    msoCTPDockPositionRight: 2\r\n}\r\n\r\nfunction GetUrlPath() {\r\n    let e = document.location.toString()\r\n    e = decodeURI(e)\r\n    if (-1 !== e.indexOf(\"/\"))\r\n        e = e.substring(0, e.lastIndexOf(\"/\"))\r\n    return e\r\n}\r\n\r\nexport default {\r\n    WPS_Enum,\r\n    GetUrlPath\r\n}\r\n","\r\n/* global wps:false */\r\n\r\nfunction openOfficeFileFromSystemDemo(param){\r\n    let jsonObj = (typeof(param)=='string' ? JSON.parse(param) : param)\r\n    alert(\"从业务系统传过来的参数为：\" + JSON.stringify(jsonObj))\r\n    return {wps加载项项返回: jsonObj.filepath + \", 这个地址给的不正确\"}\r\n}\r\n\r\nfunction InvokeFromSystemDemo(param){\r\n    let jsonObj = (typeof(param)=='string' ? JSON.parse(param) : param)\r\n    let handleInfo = jsonObj.Index\r\n    switch (handleInfo){\r\n        case \"getDocumentName\":{\r\n            let docName = \"\"\r\n            if (wps.WpsApplication().ActiveDocument){\r\n                docName = wps.WpsApplication().ActiveDocument.Name\r\n            }\r\n\r\n            return {当前打开的文件名为:docName}\r\n        }\r\n\r\n        case \"newDocument\":{\r\n            let newDocName=\"\"\r\n            let doc = wps.WpsApplication().Documents.Add()\r\n            newDocName = doc.Name\r\n\r\n            return {操作结果:\"新建文档成功，文档名为：\" + newDocName}\r\n        }\r\n\r\n        case \"OpenFile\":{\r\n            let filePath = jsonObj.filepath\r\n            wps.WpsApplication().Documents.OpenFromUrl(filePath)\r\n            return {操作结果:\"打开文件成功\"}\r\n        }\r\n        default:\r\n    }\r\n\r\n    return {其它xxx:\"\"}\r\n}\r\n\r\nexport default{\r\n    openOfficeFileFromSystemDemo,\r\n    InvokeFromSystemDemo\r\n}","import Util from '../js/util.js'\nimport SystemDemo from '../js/systemdemo.js'\n/* global wps:false */\nvar WebNotifycount = 0;\n\nvar ribbon = {\n    //这个函数在整个wps加载项中是第一个执行的\n    OnAddinLoad: function(ribbonUI) {\n        if (typeof (wps.ribbonUI) != \"object\") {\n            wps.ribbonUI = ribbonUI\n        }\n\n        if (typeof (wps.Enum) != \"object\") { // 如果没有内置枚举值\n            wps.Enum = Util.WPS_Enum\n        }\n\n        //这几个导出函数是给外部业务系统调用的\n        window.openOfficeFileFromSystemDemo = SystemDemo.openOfficeFileFromSystemDemo\n        window.InvokeFromSystemDemo = SystemDemo.InvokeFromSystemDemo\n\n        wps.PluginStorage.setItem(\"EnableFlag\", false) //往PluginStorage中设置一个标记，用于控制两个按钮的置灰\n        wps.PluginStorage.setItem(\"ApiEventFlag\", false) //往PluginStorage中设置一个标记，用于控制ApiEvent的按钮label\n        return true\n    },\n\n    OnAction: function(control) {\n        const eleId = control.Id\n        switch (eleId) {\n            case \"btnShowMsg\":\n                {\n                    const doc = wps.WpsApplication().ActiveDocument\n                    if (!doc) {\n                        alert(\"当前没有打开任何文档\")\n                        return\n                    }\n                    alert(doc.Name)\n                }\n                break;\n            case \"btnIsEnbable\":\n                {\n                    let bFlag = wps.PluginStorage.getItem(\"EnableFlag\")\n                    wps.PluginStorage.setItem(\"EnableFlag\", !bFlag)\n\n                    //通知wps刷新以下几个按饰的状态\n                    wps.ribbonUI.InvalidateControl(\"btnIsEnbable\")\n                    wps.ribbonUI.InvalidateControl(\"btnShowDialog\")\n                    wps.ribbonUI.InvalidateControl(\"btnShowTaskPane\")\n                    //wps.ribbonUI.Invalidate(); 这行代码打开则是刷新所有的按钮状态\n                    break\n                }\n            case \"btnShowDialog\":\n                wps.ShowDialog(Util.GetUrlPath() + \"dialog\", \"这是一个对话框网页\", 400 * window.devicePixelRatio, 400 * window.devicePixelRatio, false)\n                break\n            case \"btnShowTaskPane\":\n                {\n                    let tsId = wps.PluginStorage.getItem(\"taskpane_id\")\n                    if (!tsId) {\n                        let tskpane = wps.CreateTaskPane(Util.GetUrlPath() + \"taskpane\")\n                        let id = tskpane.ID\n                        wps.PluginStorage.setItem(\"taskpane_id\", id)\n                        tskpane.Visible = true\n                    } else {\n                        let tskpane = wps.GetTaskPane(tsId)\n                        tskpane.Visible = !tskpane.Visible\n                    }\n                }\n                break\n            case \"btnApiEvent\":\n                {\n                    let bFlag = wps.PluginStorage.getItem(\"ApiEventFlag\")\n                    let bRegister = bFlag ? false : true\n                    wps.PluginStorage.setItem(\"ApiEventFlag\", bRegister)\n                    if (bRegister){\n                        wps.ApiEvent.AddApiEventListener('DocumentNew', 'ribbon.OnNewDocumentApiEvent')\n                    }\n                    else{\n                        wps.ApiEvent.RemoveApiEventListener('DocumentNew', 'ribbon.OnNewDocumentApiEvent')\n                    }\n                    \n                    wps.ribbonUI.InvalidateControl(\"btnApiEvent\") \n                }\n                break\n            case \"btnWebNotify\":\n                {\n                    let currentTime = new Date()\n                    let timeStr = currentTime.getHours() + ':' + currentTime.getMinutes() + \":\" + currentTime.getSeconds()\n                    wps.OAAssist.WebNotify(\"这行内容由wps加载项主动送达给业务系统，可以任意自定义, 比如时间值:\" + timeStr + \"，次数：\" + (++WebNotifycount), true)\n                }\n                break\n            default:\n                break\n        }\n        return true\n    },\n\n    GetImage: function (control) {\n        const eleId = control.Id\n        switch (eleId) {\n            case \"btnShowMsg\":\n                return \"images/1.svg\"\n            case \"btnShowDialog\":\n                return \"images/2.svg\"\n            case \"btnShowTaskPane\":\n                return \"images/3.svg\"\n            default:\n        }\n        return \"images/newFromTemp.svg\"\n    },\n\n    OnGetEnabled: function (control) {\n        const eleId = control.Id\n        switch (eleId) {\n            case \"btnShowMsg\":\n                return true\n            case \"btnShowDialog\":\n                {\n                    let bFlag = wps.PluginStorage.getItem(\"EnableFlag\")\n                    return bFlag\n                }\n            case \"btnShowTaskPane\":\n                {\n                    let bFlag = wps.PluginStorage.getItem(\"EnableFlag\")\n                    return bFlag\n                }\n            default:\n                break\n        }\n        return true\n    },\n\n    OnGetVisible: function (control) {\n        const eleId = control.Id\n        console.log(eleId)\n        return true\n    },\n\n    OnGetLabel: function (control) {\n        const eleId = control.Id\n        switch (eleId) {\n            case \"btnIsEnbable\":\n                {\n                    let bFlag = wps.PluginStorage.getItem(\"EnableFlag\")\n                    return bFlag ? \"按钮Disable\" : \"按钮Enable\"\n                }\n            case \"btnApiEvent\":\n                {\n                    let bFlag = wps.PluginStorage.getItem(\"ApiEventFlag\")\n                    return bFlag ? \"清除新建文件事件\" : \"注册新建文件事件\"\n                }    \n            default:\n                break;\n        }\n        return \"\"\n    },\n\n    OnNewDocumentApiEvent:function(doc){\n        alert(\"新建文件事件响应，取文件名: \" + doc.Name)\n    }\n\n}\n\nexport default ribbon;","import React, { Component } from 'react';\nimport ribbon from './ribbon';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n    console.log(\"init ribbon\")\n    window.ribbon = ribbon;\n  }\n\n  render() {\n    return (\n      <div>\n        this is index.html\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getDocName, createTaskpane, newDoc, addString, closeDoc, setDemoSpan, openWeb } from '../actions/dialog';\nimport './dialog.css';\nimport axios from 'axios'\n\n\nclass Dialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/.debugTemp/NotifyDemoUrl').then((res) => {\n      const { setDemoSpan } = this.props;\n      setDemoSpan(res.data);\n    });\n  }\n\n  onDocNameClick = () => {\n    const { getDocName } = this.props;\n    getDocName();\n  }\n\n  onCreateTaskpane = () => {\n    const { createTaskpane } = this.props;\n    createTaskpane();\n  }\n\n  onCreateDoc = () => {\n    const { newDoc } = this.props;\n    newDoc();\n  }\n\n  onAddString = () => {\n    const { addString } = this.props;\n    addString();\n  }\n\n  onCloseDoc = () => {\n    const { closeDoc } = this.props;\n    closeDoc();\n  }\n\n  onOpenWeb = () => {\n    const { openWeb } = this.props;\n    openWeb();\n  }\n\n  render() {\n    const { docName, demoSpan } = this.props;\n\n    return (\n      <div>\n        <div className=\"divItem\">\n          这是一个网页，按<span className=\"debug\">\"F12\"</span>可以打开调试器。\n        </div>\n        <div className=\"divItem\">\n          这个示例展示了wps加载项的相关基础能力，与B/S业务系统的交互，请用浏览器打开：\n            <span className=\"docs\" onClick={this.onOpenWeb}>{demoSpan}</span>\n        </div>\n        <div className=\"divItem\">开发文档: <span className=\"docs\">https://open.wps.cn/docs/office</span></div>\n        <div>\n          <button onClick={this.onDocNameClick}>取文件名</button>\n          <button onClick={this.onCreateTaskpane}>创建任务窗格</button>\n          <button onClick={this.onCreateDoc}>新建文件</button>\n          <button onClick={this.onAddString}>文档开头添加字符串</button>\n          <button onClick={this.onCloseDoc}>关闭文件</button>\n        </div>\n        <hr />\n        <div>文档文件名为：<span>{docName}</span></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    docName: state.dialog.get('docName'),\n    demoSpan: state.dialog.get('demoSpan'),\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getDocName,\n  createTaskpane,\n  newDoc,\n  addString,\n  closeDoc,\n  setDemoSpan,\n  openWeb\n})(Dialog);\n","export const GETDOCNAME = \"getDocName\";\nexport const CREATETASKPANE = \"createTaskpane\";\nexport const NEWDOC = \"newDoc\";\nexport const ADDSTRING = \"addString\";\nexport const CLOSEDOC = \"closeDoc\";\nexport const SETDEMOSPAN = \"setDemoSpan\";\nexport const OPENWEB = \"openWeb\";\n\nexport function getDocName(data) {\n    return { type: GETDOCNAME, data }\n}\n\nexport function createTaskpane(data) {\n    return { type: CREATETASKPANE, data }\n}\n\nexport function newDoc(data) {\n    return { type: NEWDOC, data }\n}\n\nexport function addString(data) {\n    return { type: ADDSTRING, data }\n}\n\nexport function closeDoc(data) {\n    return { type: CLOSEDOC, data }\n}\n\nexport function setDemoSpan(data) {\n    return { type: SETDEMOSPAN, data }\n}\n\nexport function openWeb(data) {\n    return { type: OPENWEB, data }\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  dockLeft,\n  dockRight,\n  hideTaskPane,\n  addString,\n  getDocName,\n  setDemoSpan,\n  openWeb,\n} from \"../actions/taskpane\";\nimport \"./dialog.css\";\nimport axios from \"axios\";\n\nclass Taskpane extends Component {\n  componentDidMount() {\n    axios.get(\"/.debugTemp/NotifyDemoUrl\").then((res) => {\n      const { setDemoSpan } = this.props;\n      setDemoSpan(res.data);\n    });\n  }\n\n  onDockLeft = () => {\n    const { dockLeft } = this.props;\n    dockLeft();\n  };\n\n  onDockRight = () => {\n    const { dockRight } = this.props;\n    dockRight();\n  };\n  onHideTaskPane = () => {\n    const { hideTaskPane } = this.props;\n    hideTaskPane();\n  };\n  onAddString = () => {\n    const { addString } = this.props;\n    addString();\n  };\n  onGetDocName = () => {\n    const { getDocName } = this.props;\n    getDocName();\n  };\n  onOpenWeb = () => {\n    const { openWeb } = this.props;\n    openWeb();\n  };\n\n  render() {\n    const { docName, demoSpan } = this.props;\n\n    return (\n      <div className=\"global\">\n        <div className=\"divItem\">\n          这是一个网页，按<span className=\"debug\">\"F12\"</span>可以打开调试器。\n        </div>\n        <div className=\"divItem\">\n          这个示例展示了wps加载项的相关基础能力，与B/S业务系统的交互，请用浏览器打开：\n          <span className=\"docs\" onClick={this.onOpenWeb}>\n            {demoSpan}\n          </span>\n        </div>\n        <div className=\"divItem\">\n          开发文档:{\" \"}\n          <span className=\"docs\">https://open.wps.cn/docs/office</span>\n        </div>\n        <hr />\n        <div className=\"divItem\">\n          <button onClick={this.onDockLeft}>停靠左边</button>\n          <button onClick={this.onDockRight}>停靠右边</button>\n          <button onClick={this.onHideTaskPane}>隐藏TaskPane</button>\n          <button onClick={this.onAddString}> 文档开头添加字符串</button>\n          <button onClick={this.onGetDocName}> 取文件名</button>\n        </div>\n        <hr />\n        <div className=\"divItem\">\n          文档文件名为：<span>{docName}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    docName: state.dialog.get(\"docName\"),\n    demoSpan: state.dialog.get(\"demoSpan\"),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  dockLeft,\n  dockRight,\n  hideTaskPane,\n  addString,\n  getDocName,\n  setDemoSpan,\n  openWeb,\n})(Taskpane);\n","export const DOCKLEFT = \"dockLeft\";\nexport const DOCKRIGHT = \"dockRight\";\nexport const HIDETASKPANE = \"hideTaskPane\";\nexport const ADDSTRING = \"addString\";\nexport const GETDOCNAME = \"getDocName\";\nexport const SETDEMOSPAN = \"setDemoSpan\";\nexport const OPENWEB = \"openWeb\";\n\n\nexport function dockLeft(data) {\n    return { type: DOCKLEFT, data }\n}\n\nexport function dockRight(data) {\n    return { type: DOCKRIGHT, data }\n}\n\nexport function hideTaskPane(data) {\n    return { type: HIDETASKPANE, data }\n}\n\nexport function addString(data) {\n    return { type: ADDSTRING, data }\n}\n\nexport function getDocName(data) {\n    return { type: GETDOCNAME, data }\n}\n\nexport function setDemoSpan(data) {\n    return { type: SETDEMOSPAN, data }\n}\n\nexport function openWeb(data) {\n    return { type: OPENWEB, data }\n}","import { GETDOCNAME, CREATETASKPANE, NEWDOC, ADDSTRING, CLOSEDOC, SETDEMOSPAN, OPENWEB } from \"../actions/dialog\";\nimport * as Immutable from \"immutable\";\nimport Util from \"../js/util.js\"\n\n/* global wps:false */\n\nconst defaultState = Immutable.Map({\n    docName: null,\n    demoSpan: \"waiting...\"\n});\n\nexport default function (state = defaultState, action) {\n    switch (action.type) {\n        case GETDOCNAME:\n            {\n                let docName = wps.WpsApplication().ActiveDocument.Name\n                let newState = state.set('docName', docName)\n                return newState\n            }\n        case NEWDOC:\n            {\n                wps.WpsApplication().Documents.Add()\n                break;\n            }\n        case CREATETASKPANE:\n            {\n                let tsId = wps.PluginStorage.getItem(\"taskpane_id\")\n                if (!tsId){\n                    let tskpane = wps.CreateTaskPane(Util.GetUrlPath() + \"taskpane\")\n                    let id = tskpane.ID\n                    wps.PluginStorage.setItem(\"taskpane_id\", id)\n                    tskpane.Visible = true\n                }else{\n                    let tskpane = wps.GetTaskPane(tsId)\n                    tskpane.Visible = true\n                }\n                break\n            }\n        case ADDSTRING:\n            {\n                let doc = wps.WpsApplication().ActiveDocument\n                if (doc){\n                    doc.Range(0, 0).Text=\"Hello, wps加载项!\"\n                    //好像是wps的bug, 这两句话触发wps重绘\n                    let rgSel = wps.WpsApplication().Selection.Range\n                    if (rgSel)\n                        rgSel.Select()\n                }\n                break;\n            }\n        case CLOSEDOC:\n            {\n                if (wps.WpsApplication().Documents.Count < 2)\n                {\n                    alert(\"当前只有一个文档，别关了。\")\n                    break\n                }\n                    \n                let doc = wps.WpsApplication().ActiveDocument\n                if (doc)\n                    doc.Close()\n                break;\n            }\n        case SETDEMOSPAN:\n            {\n                let newState = state.set('demoSpan', action.data)\n                return newState\n            }\n        case OPENWEB:\n            {\n                let param = state.get('demoSpan')\n                wps.OAAssist.ShellExecute(param)\n            }\n        default:\n    }\n    return state;\n}","import { DOCKLEFT, DOCKRIGHT, HIDETASKPANE, ADDSTRING, GETDOCNAME, SETDEMOSPAN, OPENWEB } from \"../actions/taskpane\";\nimport * as Immutable from \"immutable\";\nimport Util from \"../js/util.js\"\n\n/* global wps:false */\n\nconst defaultState = Immutable.Map({\n    docName: null,\n    demoSpan: \"waiting...\"\n});\n\nexport default function (state = defaultState, action) {\n    switch (action.type) {\n        case DOCKLEFT:\n            {\n                let tsId = wps.PluginStorage.getItem(\"taskpane_id\")\n                if (tsId){\n                    let tskpane = wps.GetTaskPane(tsId)\n                    let value;\n                    if (wps.Enum)\n                        value =  wps.Enum.msoCTPDockPositionLeft;\n                    else\n                        value = Util.WPS_Enum.msoCTPDockPositionLeft\n                    tskpane.DockPosition = value\n                }\n                break\n            }\n        case DOCKRIGHT:\n            {\n                let tsId = wps.PluginStorage.getItem(\"taskpane_id\")\n                if (tsId){\n                    let tskpane = wps.GetTaskPane(tsId)\n                    let value;\n                    if (wps.Enum)\n                        value =  wps.Enum.msoCTPDockPositionRight;\n                    else\n                        value = Util.WPS_Enum.msoCTPDockPositionRight\n                    tskpane.DockPosition = value\n                }\n                break\n            }\n        case HIDETASKPANE:\n            {\n                let tsId = wps.PluginStorage.getItem(\"taskpane_id\")\n                if (tsId){\n                    let tskpane = wps.GetTaskPane(tsId)\n                    tskpane.Visible = false\n                }\n                break\n            }\n        case ADDSTRING:\n            {\n                let doc = wps.WpsApplication().ActiveDocument\n                if (doc){\n                    doc.Range(0, 0).Text=\"Hello, wps加载项!\"\n                    //好像是wps的bug, 这两句话触发wps重绘\n                    let rgSel = wps.WpsApplication().Selection.Range\n                    if (rgSel)\n                        rgSel.Select()\n                }\n                break;\n            }\n        case GETDOCNAME:\n            {\n                let docName = wps.WpsApplication().ActiveDocument.Name\n                let newState = state.set('docName', docName)\n                return newState\n            }\n        case SETDEMOSPAN:\n            {\n                let newState = state.set('DemoSpan', action.data)\n                return newState\n            }\n        case OPENWEB:\n            {\n                let param = state.get('demoSpan')\n                wps.OAAssist.ShellExecute(param)\n            }\n        default:\n    }\n    return state;\n}","import { combineReducers } from 'redux';\nimport dialog from './dialog';\nimport taskpane from './taskpane';\n\nconst rootReducer = combineReducers({\n    dialog,\n    taskpane\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport App from './components/app';\nimport Dialog from './components/dialog';\nimport TaskPane from './components/taskpane';\nimport { Provider } from 'react-redux';\nimport { createStore } from \"redux\";\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, window.STATE_FROM_SERVER);\n\nReactDOM.render((\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/dialog\" exact component={Dialog} />\n        <Route path=\"/taskpane\" exact component={TaskPane} />\n      </Switch>\n    </HashRouter>\n  </Provider>\n), document.getElementById(\"root\")\n);\n"],"sourceRoot":""}